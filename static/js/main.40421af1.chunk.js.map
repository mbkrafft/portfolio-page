{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Contact.js","components/Footer.js","serviceWorker.js","index.js","components/App/App.js"],"names":["Header","props","inputData","Fragment","id","className","href","title","name","role","roleDescription","socialLinks","map","item","key","url","target","rel","About","src","alt","aboutme","Resume","education","UniversityName","specialization","MonthOfStarting","YearOfStarting","MonthOfPassing","YearOfPassing","description","work","CompanyName","MonthOfLeaving","YearOfLeaving","Portfolio","portfolio","link","imgurl","Contact","to","email","buttonText","Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.40421af1.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header(props) {\n    let inputData = props.inputData;\n\n    return (\n        <React.Fragment>\n            <header id=\"home\">\n                <nav id=\"nav-wrap\">\n                    <a\n                        className=\"mobile-btn\"\n                        href=\"#nav-wrap\"\n                        title=\"Show navigation\"\n                    >\n                        Show navigation\n                    </a>\n                    <a className=\"mobile-btn\" href=\"#-\" title=\"Hide navigation\">\n                        Hide navigation\n                    </a>\n                    <ul id=\"nav\" className=\"nav\">\n                        <li className=\"current\">\n                            <a className=\"smoothscroll\" href=\"#home\">\n                                Home\n                            </a>\n                        </li>\n                        <li>\n                            <a className=\"smoothscroll\" href=\"#about\">\n                                About\n                            </a>\n                        </li>\n                        <li>\n                            <a className=\"smoothscroll\" href=\"#resume\">\n                                Education\n                            </a>\n                        </li>\n                        <li>\n                            <a className=\"smoothscroll\" href=\"#contact\">\n                                Contact\n                            </a>\n                        </li>\n                        <li>\n                            <a className=\"smoothscroll\" href=\"#portfolio\">\n                                Projects\n                            </a>\n                        </li>\n                    </ul>\n                </nav>\n                <div className=\"row banner\">\n                    <div className=\"banner-text\">\n                        <h1 className=\"responsive-headline\">\n                            {inputData.name}\n                        </h1>\n                        <h3>\n                            {inputData.role}. {inputData.roleDescription}\n                        </h3>\n                        <hr />\n                        <ul className=\"social\">\n                            {inputData.socialLinks &&\n                                inputData.socialLinks.map(item => {\n                                    return (\n                                        <li key={item.name}>\n                                            <a\n                                                href={item.url}\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                <i\n                                                    className={item.className}\n                                                ></i>\n                                            </a>\n                                        </li>\n                                    );\n                                })}\n                        </ul>\n                    </div>\n                </div>\n                <p className=\"scrolldown\">\n                    <a className=\"smoothscroll\" href=\"#about\">\n                        <i className=\"icon-down-circle\"></i>\n                    </a>\n                </p>\n            </header>\n        </React.Fragment>\n    );\n}\n","import React from \"react\";\n\nexport default function About(props) {\n    let inputData = props.inputData;\n\n    return (\n        <section id=\"about\">\n            <div className=\"row\">\n                <div className=\"three columns\">\n                    <img\n                        className=\"profile-pic\"\n                        src=\"images/profilepic.png\"\n                        alt=\"\"\n                    />\n                </div>\n                <div className=\"nine columns main-col\">\n                    <h2>About Me</h2>\n                    <p>{inputData.aboutme}</p>\n                </div>\n            </div>\n        </section>\n    );\n}\n","import React from \"react\";\n\nexport default function Resume(props) {\n    let inputData = props.inputData;\n\n    return (\n        <section id=\"resume\">\n            <div className=\"row education\">\n                <div className=\"three columns header-col\">\n                    <h1>\n                        <span>Education</span>\n                    </h1>\n                </div>\n\n                <div className=\"nine columns main-col\">\n                    {inputData.education &&\n                        inputData.education.map(item => {\n                            return (\n                                <div className=\"row item\">\n                                    <div className=\"twelve columns\">\n                                        <h3>{item.UniversityName}</h3>\n                                        <p className=\"info\">\n                                            {item.specialization}\n                                            <span>&bull;</span>{\" \"}\n                                            <em className=\"date\">\n                                                {item.MonthOfStarting}{\" \"}\n                                                {item.YearOfStarting} -{\" \"}\n                                                {item.MonthOfPassing}{\" \"}\n                                                {item.YearOfPassing}\n                                            </em>\n                                        </p>\n                                        <p className=\"desc\">\n                                            {item.description}\n                                        </p>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                </div>\n            </div>\n            <div className=\"row work\">\n                <div className=\"three columns header-col\">\n                    <h1>\n                        <span>Work</span>\n                    </h1>\n                </div>\n\n                <div className=\"nine columns main-col\">\n                    {inputData.work &&\n                        inputData.work.map(item => {\n                            return (\n                                <div className=\"row item\">\n                                    <div className=\"twelve columns\">\n                                        <h3>{item.CompanyName}</h3>\n                                        <p className=\"info\">\n                                            {item.specialization}\n                                            <span>&bull;</span>{\" \"}\n                                            <em className=\"date\">\n                                                {item.MonthOfStarting}{\" \"}\n                                                {item.YearOfStarting} -{\" \"}\n                                                {item.MonthOfLeaving}{\" \"}\n                                                {item.YearOfLeaving}\n                                            </em>\n                                        </p>\n                                        <p className=\"desc\">\n                                            {item.description}\n                                        </p>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                </div>\n            </div>\n        </section>\n    );\n}\n","import React from \"react\";\n\nexport default function Portfolio(props) {\n    let inputData = props.inputData;\n\n    return (\n        <section id=\"portfolio\">\n            <div className=\"row\">\n                <div className=\"twelve columns collapsed\">\n                    <h1>Check Out Some of My Projects</h1>\n                    <div\n                        id=\"portfolio-wrapper\"\n                        className=\"bgrid-quarters s-bgrid-thirds cf\"\n                    >\n                        {inputData.portfolio &&\n                            inputData.portfolio.map(item => {\n                                return (\n                                    <div className=\"columns portfolio-item\">\n                                        <a\n                                            href={item.link}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            <div className=\"item-wrap\">\n                                                <img\n                                                    src={`${item.imgurl}`}\n                                                    className=\"item-img\"\n                                                    alt={item.description}\n                                                />\n                                                <div className=\"overlay\">\n                                                    <div className=\"portfolio-item-meta\">\n                                                        <h5>{item.name}</h5>\n                                                        <p>\n                                                            {item.description}\n                                                        </p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </a>\n                                    </div>\n                                );\n                            })}\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n","import React from 'react';\n\nimport ReactContactForm from 'react-mail-form';\n\n\nexport default function Contact(props) {\n\n  let inputData = props.inputData;\n\n  return (\n    <section id=\"contact\">\n      <div className=\"row section-head\">\n        <div className=\"ten columns\">\n          <p className=\"lead\">\n            Feel free to send me an email for any enquiries\n          </p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <ReactContactForm to={inputData.email} buttonText=\"Click here to send the email\" />\n      </div>\n    </section>\n  );\n}\n","import React from 'react';\n\nexport default function Footer(props) {\n\n  let inputData = props.inputData;\n\n  return (\n    <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              inputData.socialLinks && inputData.socialLinks.map((item) => {\n                return (\n                  <li>\n                    <a href={item.url}>\n                      <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport Header from \"../Header\";\nimport About from \"../About\";\nimport Resume from \"../Resume\";\nimport Portfolio from \"../Portfolio\";\nimport Contact from \"../Contact\";\nimport Footer from \"../Footer\";\nimport inputData from \"../../inputData.json\";\n\nexport default function App() {\n    return (\n        <div className=\"App\">\n            <Header inputData={inputData} />\n            <About inputData={inputData} />\n            <Resume inputData={inputData} />\n            <Contact inputData={inputData} />\n            <Portfolio inputData={inputData} />\n            <Footer inputData={inputData} />\n        </div>\n    );\n}\n"],"sourceRoot":""}